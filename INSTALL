Installation instructions
*************************

Setting up the Blaze library on a particular system is a fairly easy two step process. Since
Blaze is a template library and therefore mainly consists of header files no compilation is
required. In the following, this two step process is explained in detail, preceded only by
a short summary of the requirements.


Requirements
************

In order for Blaze to work properly, the Boost library must be installed on the system. It is
recommended to use the newest Boost library available, but Blaze requires at minimum the Boost
version 1.39. If you don't have Boost installed on your system, you can download it for free
from 'www.boost.org'.


Step 1: Configuration
*********************

The first step is to adapt the Configfile in the Blaze home directory to the local configuration.
Any text editor can be used for this task:

vi ./Configfile

In the Configfile, the kind of installation (debug or release), the library types (static and/or
dynamic), the compiler including compiler flags, and several include paths have to be specified.
Afterwards, the configure script can be run, which uses the Configfile to update and create
several files:

./configure

This step can also be omitted, but results in a default configuration that does not guarantee the
highest performance for all operations. For instance, without running the configure script, Blaze
assumes that no BLAS library is installed on the system and cannot use BLAS functionality for
instance for the matrix/matrix multiplication.


Step 2: Installation
********************

The second step is the installation of the header files. Since Blaze mainly consists of header
files, the ./blaze subdirectory can be simply copied to a standard include directory:

cp -r ./blaze /usr/local/include


Step 3 (Optional): Compilation
******************************

If certain extended functionality, such as for instance blaze::ThreadPool or the blaze::logging
functionality, is required, it is necessary to create the Blaze library files. For that purpose,
the configure script has created a Makefile that can be used for the compilation process:

make

Afterwards, the libblaze.so and/or libblaze.a libraries are contained in the lib subdirectory and
can be copied to a standard library directory. However, note that this step is purely optional
and can be omitted if only the Blaze math library is required.

cp ./lib/* /usr/local/lib
