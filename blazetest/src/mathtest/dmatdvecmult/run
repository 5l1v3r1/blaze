#!/bin/bash
#==================================================================================================
#
#  Run script for the dmatdvecmult module of the Blaze test suite
#
#  Copyright (C) 2011 Klaus Iglberger - All Rights Reserved
#
#  This file is part of the Blaze library. This library is free software; you can redistribute
#  it and/or modify it under the terms of the GNU General Public License as published by the
#  Free Software Foundation; either version 3, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
#  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  See the GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along with a special
#  exception for linking and compiling against the Blaze library, the so-called "runtime
#  exception"; see the file COPYING. If not, see http://www.gnu.org/licenses/.
#
#==================================================================================================


PATH_DMATDVECMULT=$( dirname "${BASH_SOURCE[0]}" )

echo " Running dense matrix/dense vector multiplication tests...";

$PATH_DMATDVECMULT/M2x2aV2a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M2x2aV2b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M2x2aVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M2x2aVDb; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M2x2bV2a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M2x2bV2b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M2x2bVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M2x2bVDb; if [ $? != 0 ]; then exit 1; fi

$PATH_DMATDVECMULT/M3x3aV3a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M3x3aV3b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M3x3aVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M3x3aVDb; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M3x3bV3a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M3x3bV3b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M3x3bVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M3x3bVDb; if [ $? != 0 ]; then exit 1; fi

$PATH_DMATDVECMULT/M4x4aV4a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M4x4aV4b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M4x4aVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M4x4aVDb; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M4x4bV4a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M4x4bV4b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M4x4bVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M4x4bVDb; if [ $? != 0 ]; then exit 1; fi

$PATH_DMATDVECMULT/M5x5aV5a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M5x5aV5b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M5x5aVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M5x5aVDb; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M5x5bV5a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M5x5bV5b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M5x5bVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M5x5bVDb; if [ $? != 0 ]; then exit 1; fi

$PATH_DMATDVECMULT/M6x6aV6a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M6x6aV6b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M6x6aVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M6x6aVDb; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M6x6bV6a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M6x6bV6b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M6x6bVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M6x6bVDb; if [ $? != 0 ]; then exit 1; fi

$PATH_DMATDVECMULT/M7x13aV13a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M7x13aV13b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M7x13aVDa;  if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M7x13aVDb;  if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M7x13bV13a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M7x13bV13b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M7x13bVDa;  if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M7x13bVDb;  if [ $? != 0 ]; then exit 1; fi

$PATH_DMATDVECMULT/M16x8aV8a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M16x8aV8b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M16x8aVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M16x8aVDb; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M16x8bV8a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M16x8bV8b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M16x8bVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/M16x8bVDb; if [ $? != 0 ]; then exit 1; fi

$PATH_DMATDVECMULT/MDaV2a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaV2b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaV3a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaV3b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaV4a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaV4b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaV5a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaV5b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaV6a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaV6b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDaVDb; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbV2a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbV2b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbV3a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbV3b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbV4a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbV4b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbV5a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbV5b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbV6a; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbV6b; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbVDa; if [ $? != 0 ]; then exit 1; fi
$PATH_DMATDVECMULT/MDbVDb; if [ $? != 0 ]; then exit 1; fi

$PATH_DMATDVECMULT/AliasingTest; if [ $? != 0 ]; then exit 1; fi
